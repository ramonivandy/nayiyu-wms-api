# Nexus WMS Core - Backend Development TODO

## Project Setup
- [ ] Initialize Node.js/TypeScript project with package.json
- [ ] Install core dependencies (Express, TypeScript, Prisma, Zod, JWT)
- [ ] Configure TypeScript (tsconfig.json) for Node.js/Express
- [ ] Create project directory structure (src, controllers, services, middleware, etc.)
- [ ] Initialize Prisma and create database schema
- [ ] Create environment configuration files (.env, .env.example)

## Core Infrastructure
- [ ] Create Express app with basic middleware setup
- [ ] Implement JWT authentication middleware
- [ ] Create Zod validation schemas for API endpoints
- [ ] Add global error handling middleware

## API Implementation - Core Inventory Management
- [ ] Implement product controller with GET /products endpoint (INV-001)
  - Paginated product list with stock levels
  - Search functionality
  - Role: Warehouse Manager
- [ ] Implement inventory adjustment endpoint POST /inventory/adjustments (INV-002)
  - Manual inventory adjustments
  - Transactional updates
  - Role: Warehouse Manager

## API Implementation - Outbound Logistics
- [ ] Implement picklist controller with GET /picklists/assigned/next (OUT-001)
  - Get next available picklist for picker
  - Include optimized path ordering
  - Role: Picker
- [ ] Implement verify pick endpoint POST /picklists/verify-pick (OUT-002)
  - Barcode verification for product and bin
  - Update pick status
  - Role: Picker

## Deployment & Testing
- [ ] Create Dockerfile and docker-compose for containerization
- [ ] Set up basic testing infrastructure

## Tech Stack
- Runtime: Node.js (LTS)
- Framework: Express.js
- Language: TypeScript
- Database: PostgreSQL
- ORM: Prisma
- Validation: Zod
- Authentication: JWT
